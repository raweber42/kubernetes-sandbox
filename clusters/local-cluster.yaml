# k3d configuration file, saved as e.g. /home/me/myk3dcluster.yaml
# for reference, see https://k3d.io/stable/usage/configfile/#all-options-example
apiVersion: k3d.io/v1alpha5
kind: Simple
metadata:
  name: kubernetes-sandbox # name that you want to give to your cluster (will still be prefixed with `k3d-`)
servers: 1
agents: 2
# kubeAPI: # same as `--api-port myhost.my.domain:6445` (where the name would resolve to 127.0.0.1)
#   host: "myhost.my.domain" # important for the `server` setting in the kubeconfig
#   hostIP: "127.0.0.1" # where the Kubernetes API will be listening on
#   hostPort: "6445" # where the Kubernetes API listening port will be mapped to on your host system
image: rancher/k3s:v1.20.4-k3s1 # use fixed version
# network: my-custom-net # same as `--network my-custom-net`
# subnet: "172.28.0.0/16" # same as `--subnet 172.28.0.0/16`
token: superSecretToken
# volumes: # repeatable flags are represented as YAML lists
#   - volume: /my/host/path:/path/in/node # same as `--volume '/my/host/path:/path/in/node@server:0;agent:*'`
#     nodeFilters:
#       - server:0
#       - agent:*
ports:
  - port: 8080:80 # for http
    nodeFilters:
      - loadbalancer
  - port: 8443:443 # for https
    nodeFilters:
      - loadbalancer
# env:
  # - envVar: bar=baz # same as `--env 'bar=baz@server:0'`
  #   nodeFilters:
  #     - server:0
options:
  k3d: # k3d runtime settings
    wait: true # wait for cluster to be usable before returning (default: true)
    timeout: "60s" # wait timeout before aborting
  #   disableLoadbalancer: false
  #   disableImageVolume: false
  #   disableRollback: false
  #   loadbalancer:
  #     configOverrides:
  #       - settings.workerConnections=2048
  # kubeconfig:
  #   updateDefaultKubeconfig: true # add new cluster to your default Kubeconfig (default: true)
  #   switchCurrentContext: true # also set current-context to the new cluster's context (default: true)

